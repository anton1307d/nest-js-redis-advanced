services:
  api:
    build:
      dockerfile: ./.infra/Dockerfile
      context: .
      target: development
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    ports:
      - '8000:8000'
    depends_on:
      - postgres
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data

#  redis-rdb:
#    image: redis
#    container_name: redis-rdb
#    command: redis-server --save 900 1 --appendonly no
#    volumes:
#      - redis_rdb_data:/data
#    ports:
#      - 6380:6379
#
#  redis-aof:
#    image: redis
#    container_name: redis-aof
#    command: redis-server --appendonly yes
#    volumes:
#      - redis_aof_data:/data
#    ports:
#      - 6379:6379

  redis-no-persistence:
    image: redis
    container_name: redis-no-persistence
    command: redis-server --appendonly no --save ""
    volumes:
      - redis_no_persistence_data:/data
    ports:
      - 6379:6379

  beanstalkd:
    image: schickling/beanstalkd
    container_name: beanstalkd
    ports:
      - 11300:11300

  # monitoring
  telegraf:
    image: telegraf:1.25.2-alpine
    volumes:
      - ./.infra/telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    env_file: ./.infra/configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./.infra/:/imports
      - influxdb_data:/var/lib/influxdb

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=debug # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: ./.infra/configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./.infra/grafana/provisioning/:/etc/grafana/provisioning/
      - ./.infra/grafana/dashboards/:/var/lib/grafana/dashboards/


volumes:
  postgres:
    driver: local
  grafana_data:
    driver: local
  influxdb_data:
    driver: local
  redis_rdb_data:
    driver: local
  redis_aof_data:
    driver: local
  redis_no_persistence_data:
    driver: local
